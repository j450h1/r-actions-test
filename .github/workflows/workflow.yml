on: [push, pull_request]

name: Continuous integration

jobs:
  CI:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6' }
        - { os: macOS-latest, r: '3.6' }
        - { os: macOS-latest, r: 'devel'}
        - { os: ubuntu-latest, r: '3.2' }
        - { os: ubuntu-latest, r: '3.3' }
        - { os: ubuntu-latest, r: '3.4' }
        - { os: ubuntu-latest, r: '3.5' }
        - { os: ubuntu-latest, r: '3.6' }
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
      - run: which gcc
      - run: gcc --version
      - run: g++ --version
      - run: gfortran --version
      - uses: r-lib/actions/setup-pandoc@master
      - uses: r-lib/actions/setup-tinytex@master
      - name: Cache R packages
        uses: actions/cache@v1
        if: runner.os != 'Windows'
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages('remotes')" -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          eval "$sysreqs"
      - name: Install dependencies
        run: Rscript -e "install.packages(c('remotes', 'rcmdcheck'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(error_on = 'error')"
